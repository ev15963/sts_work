1교시

--프레임 워크

Spring
자바로 만들어진 웹 어플리케이션 프레임워크
안정적이고 높은 성능이 장점

tomcat
jsp와 자바 서블릿을 실행할 수 있는 환경을 제공하는 웹서버

MyBatis
SQL을 맵핑하여 사용할 수 있도록 해주는 프레임워크
iBatis에서 파생


--개발 툴
Spring STS
이클립스 기반으로 하여 Spring 프레임워크를 좀 더 쉽게 사용할 수 있도록 도와주는 IDE

spring 사용방법

1. eclipse -> jar lib local에 설치하여 오프라인에서도 사용 가능
2.		   -> plug in
 
3. STS (Maven이 관리)-> spring 전용 툴 spring tool suit

4) intellij (gradle이 관리) // 통합 개발 시스템 (파이썬, R, 자바 프로젝트를 통합시키고 싶을 때)

spring-tool-suite-3.8.4.RELEASE-e4.6.3-win32-x86_64 (32비트 64비트 둘다 지원)

sts-3.8.4.RELEASE // 

AOP Support : 관점 지향 프로그래밍을 지원해주는 라이브러리 (공통 모듈 개발할때 사용)

Beans Support : Beans 객체 

Template Projects :


20) 실습프로젝트 생성
File > New > Spring Legacy project

utilty project

com.spring.biz 최소 3개 까지 작성해여 인식


STS 이용하여 Spring MVC Project 를 생성하면 오류 발생

JRE 버전 및 서버 라이브러리 등이 미등록 되었 때문

해당 프로젝트 우클릭 setting > Project Facets

java1.6 -> 1.8 > apply (반영)

runtimes

Apach Tomcat v8.0 : New > Apache 폴더 > next > Browse > c\Program Files\Tomcat 8.0 > Finish > Apply  ~23

java build path > Libraries >

Apache Tomcat v8.0
JRE System Library
Maven Dependencies

3개의 라이브러리가 나와야 함 > ok


2교시 

불필요한거 삭제하기

src/main/resources > META-INF 삭제

src\main\webapp\web-inf\spring, views 삭제
			web.xml <web-app>태그 안 삭제

BoardWeb/porm.xml\ 내부 코드 수정
: <java-version>1.8</java-version>
: <org.springframework-version>4.2.4.RELEASE</org.springframework-version>

Maven Dependencies (라이브러리 역할) p.26

spring-context-4.2.4.RELEASE.jar : 스프링 내부 컨텍스트를 지원

관점지향 지원 파일
spring-aop-4.2.4.RELEASE.jar
aopalliance-1.0.jar

spring-beans-4.2.4.RELEASE.jar : 스프링 컨테이너가 지원해주는 Beans

spring-expression-4.2.4.RELEASE.jar

spring-web-4.2.4.RELEASE.jar : web 지원
spring-webmvc-4.2.4.RELEASE.jar : mvc로 지원

의존성 주입
aspectjrt-1.6.10.jar
javax.inject-1.jar

servlet-api-2.5.jar : 장소제공 selvet 클래스를 제공해주는

jsp-api-2.1.jar : 
jstl-1.2.jar : 태그 라이브러리

junit-4.7.jar : 프로젝트의 구문을 단위 테스트

로그값 찍어주는 jar
log4j-1.2.15.jar
slf4j-api-1.6.6.jar

세가지 라이브러리가 필요
slf4j-api-1.6.6.jar 
slf4j-log4j12-1.6.6.jar

pom.xml : 라이브러리 관리

02 프레임 워크 개요 27
프레임워크 등장 배경
프레임워크 : 틀 / 소프트 웨어 관점 : 아키텍처에 해당되는 골격 코드

애플리케이션 개발 시 가장 중요한 것 : 전체 구조를 결정하는 아키텍쳐
이와 같은 아키택처의 골결 코드를 제공하는 것이 프레임워크

프레임워크의 중요성
프레임워크는 개발에서 기본이 되는 뼈대, 틀 제공
즉, 개발자에게 모든 것을 위임하는 것이 아니라
애플리케이션의 기본 아키텍쳐는 프렘임워크가 제공하고, 그 뼈대에 살이 붙이는 작업만 개발자가 담당

일반적으로 시스템을 개발하는 과정에서 대부분의 개발자들은 산출물에 입각하여 개발하므로
아키텍처의 일관성이 잘 유지
하지만 유지보수 과정에서 인력과 시간 부족으로 인해 산출물을 무시되기 쉽고
개발자의 경험에 의존하여 유지보수가 되는 경우가 많은데
프레임워크는 이런 문제를 근본적으로 해결

산출물 : 개발하기 위한 설계도

개발자도 문서작업 잘해야합니다.....

(잘만들어진) 프레임워크의 장점 p.29

잘 만들어진 프레임워크를 사용하면
애플리케이션에 대한 분석, 설계, 구현 모두에서 재사용성이 증가

1. 빠른 구현 시간
2. 쉬운 관리
3. 개발자들의 역량 획일화
4. 검증된 아키텍처의 재사용과 일관성 유지 

대기업 고도화 -> 통합시스템(일관성 획일화)
(가장 좋은점)


1. 빠른 구현 시간
개발자는 비즈니스 로직만 구현하면 되므로 제한된 시간에 많은 기능을 구현가능
(프레임워크가 아키텍처에 해당하는 골격 코드를 제공하기 때문)

2. 쉬운관리

같은 프레임워크가 적용되 애플리케이션들의 관리가 쉬움
결과적으로 유지보수에 들어가는 인력과 시간을 줄일 수 있다.

3. 개발자들의 역량 획일화 (숙련도의 갭이 좁아짐)
프레임워크를 사용하면 숙련된 개발자와 초보 개발자가 생성한 코드가 비슷해진다.
괸리자 입장에서는 개별 인력을 더 효율적으로 구성가능
(프레임워크라는 공통 요소가 없으면 숙련된 개발자와 초보 개발자는 지식과 경험이 다르므로 두 개발자가 

4. 검증된 아키텍셔의 재사용의 일관성 유지
검증된 프레임워크에서 제공하는 아케텍처를 이용하면
별다른 고민이나 검증 없이 소프트웨어를 개발 가능

자바 기반 프레임워크 

자바 기반의 프레임워크는 대부분 오픈소스 형태로 제공
별도의 비용이 없고 기존 프레임워크를 이용하여 새로운 기능을 갖는 프레임워크 구축 가능
(단 검증되지 않는 오픈소스를 사용하게 되면 오류가 많이 나올 수 있다.)

대표적인 자바 기반의 프레임워크
Presentaion 처리 영역 : Spring (MVC)
MVC 아키텍처를 제공

데이터 베이스 쪽
business : 저
IOC : 제어를 역행
AOP : 관점시향 프로그래밍 (Aspect Oriented Programming)

persisece

hibernate : 데이터베이스중 
단, 용량이 크다 -> 처리속도가 떨어진다

ORM : 하향세

JPA : 자바쪽에서 잡아주는 표준 API (하향세)
Ibatis -> Mybatis : 경량 빠름, sql를 xml형식으로 작성 vo와 완벽 간단하게 매핑 유지보수편함, 
스트럭처는 다른 프레임워크랑 결합되지 않는다 (이식성x 독불장군)

스프링 프레임워크

3교시

EJB(enterprise Java Beans) : 공부하기가 힘듬, 스펙이 복잡, 개발 유지보수 힘듬

POJO Plain Old Java Object : 빠른 학습 , 편리한 유지보수, 빠른 개발

ejb를 개발하면 20여가지 디자인패턴을 일일이 알아야함
스프링 디자인 패턴 mvc, sington(생성자 private get instance)

pojo : 일반 자바클래스

조건 안붙는 form (dao, dto)
스프링 프레임워크의 특징
ioc aop를 지원하는 경량 컨테이너 프레임워크


1.경량(Lightweight)
스프링은 크기가 작다
여러 개의 모듈로 구성되 있으며, 각 모듈은 하나 이상의 jar 파일로 구성되어있다.

이 몇개의 jar 파일만 있으면 개발과 실행이 모두 가능


따라서 스프링을 이용해서 만든 애플리케이션의 배포 역시 





제어 역행 코드
src/main/resources >New >servlet >CreateServlet /hello.do > dopost 체크 해제

HelloServlet.java 수정 ->  web.xml에서 반영됨